/* _grid.scss */

@use "sass:math";
@import 'mixins'; // for respond-to()

.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -0.5rem;
  margin-left: -0.5rem;
}

[class*="col-"] {
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

/* 12 columns, using math.percentage($i/12) to yield something like 8.333333% */
@for $i from 1 through 12 {
  .col-sm-#{$i} {
    @include respond-to(sm) {
      flex: 0 0 math.percentage($i / 12);
      max-width: math.percentage($i / 12);
    }
  }
  .col-md-#{$i} {
    @include respond-to(md) {
      flex: 0 0 math.percentage($i / 12);
      max-width: math.percentage($i / 12);
    }
  }
  .col-lg-#{$i} {
    @include respond-to(lg) {
      flex: 0 0 math.percentage($i / 12);
      max-width: math.percentage($i / 12);
    }
  }
  .col-xl-#{$i} {
    @include respond-to(xl) {
      flex: 0 0 math.percentage($i / 12);
      max-width: math.percentage($i / 12);
    }
  }
  .col-xxl-#{$i} {
    @include respond-to(xxl) {
      flex: 0 0 math.percentage($i / 12);
      max-width: math.percentage($i / 12);
    }
  }

  /* Offsets */
  .offset-sm-#{$i} {
    @include respond-to(sm) {
      margin-left: math.percentage($i / 12);
    }
  }
  .offset-md-#{$i} {
    @include respond-to(md) {
      margin-left: math.percentage($i / 12);
    }
  }
  .offset-lg-#{$i} {
    @include respond-to(lg) {
      margin-left: math.percentage($i / 12);
    }
  }
  .offset-xl-#{$i} {
    @include respond-to(xl) {
      margin-left: math.percentage($i / 12);
    }
  }
  .offset-xxl-#{$i} {
    @include respond-to(xxl) {
      margin-left: math.percentage($i / 12);
    }
  }
}

/* Container class */
.container {
  @include container;
}
