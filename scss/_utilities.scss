@import 'mixins'; // ensure respond-to is available

/* ----------------------------------
   Define $generic-gap-values to avoid 
   the 'Undefined variable' error 
----------------------------------- */
$generic-gap-values: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;

/* ===================================
   Spacing Utilities
=================================== */
@for $i from 0 through 10 {
  .m-#{$i}  { margin: var(--spacing-#{$i}) !important; }
  .mt-#{$i} { margin-top: var(--spacing-#{$i}) !important; }
  .mr-#{$i} { margin-right: var(--spacing-#{$i}) !important; }
  .mb-#{$i} { margin-bottom: var(--spacing-#{$i}) !important; }
  .ml-#{$i} { margin-left: var(--spacing-#{$i}) !important; }

  .p-#{$i}  { padding: var(--spacing-#{$i}) !important; }
  .pt-#{$i} { padding-top: var(--spacing-#{$i}) !important; }
  .pr-#{$i} { padding-right: var(--spacing-#{$i}) !important; }
  .pb-#{$i} { padding-bottom: var(--spacing-#{$i}) !important; }
  .pl-#{$i} { padding-left: var(--spacing-#{$i}) !important; }

  .mx-#{$i} {
    margin-left: var(--spacing-#{$i}) !important;
    margin-right: var(--spacing-#{$i}) !important;
  }
  .my-#{$i} {
    margin-top: var(--spacing-#{$i}) !important;
    margin-bottom: var(--spacing-#{$i}) !important;
  }

  .px-#{$i} {
    padding-left: var(--spacing-#{$i}) !important;
    padding-right: var(--spacing-#{$i}) !important;
  }
  .py-#{$i} {
    padding-top: var(--spacing-#{$i}) !important;
    padding-bottom: var(--spacing-#{$i}) !important;
  }
}

/* ===================================
   Display Utilities
=================================== */
.display-block { display: block !important; }
.display-inline { display: inline !important; }
.display-inline-block { display: inline-block !important; }
.display-flex { display: flex !important; }
.display-grid { display: grid !important; }

/* Responsive display classes: d-sm-none, d-sm-block, etc. */
.d-none {
  display: none !important;
}

@each $bp in (sm, md, lg, xl, xxl) {
  .d-#{$bp}-none {
    @include respond-to($bp) {
      display: none !important;
    }
  }
  .d-#{$bp}-block {
    @include respond-to($bp) {
      display: block !important;
    }
  }
  .d-#{$bp}-inline {
    @include respond-to($bp) {
      display: inline !important;
    }
  }
  .d-#{$bp}-inline-block {
    @include respond-to($bp) {
      display: inline-block !important;
    }
  }
  .d-#{$bp}-flex {
    @include respond-to($bp) {
      display: flex !important;
    }
  }
  .d-#{$bp}-grid {
    @include respond-to($bp) {
      display: grid !important;
    }
  }
}

/* ==================================
   Text Utilities
================================== */
.text-left   { text-align: left !important; }
.text-center { text-align: center !important; }
.text-right  { text-align: right !important; }

.text-uppercase   { text-transform: uppercase !important; }
.text-lowercase   { text-transform: lowercase !important; }
.text-capitalize  { text-transform: capitalize !important; }

.text-underline     { text-decoration: underline !important; }
.text-line-through  { text-decoration: line-through !important; }
.text-no-decoration { text-decoration: none !important; }

.text-xs   { font-size: var(--font-size-xs) !important; }
.text-sm   { font-size: var(--font-size-sm) !important; }
.text-md   { font-size: var(--font-size-md) !important; }
.text-lg   { font-size: var(--font-size-lg) !important; }
.text-xl   { font-size: var(--font-size-xl) !important; }
.text-2xl  { font-size: var(--font-size-2xl) !important; }

/* ==================================
   Background Utilities
================================== */
.background-black       { background-color: var(--color-black) !important; color: var(--color-white) !important; }
.background-white       { background-color: var(--color-white) !important; color: var(--color-black) !important; }
.background-light-gray  { background-color: var(--color-light-gray) !important; }
.background-gray        { background-color: var(--color-gray) !important; }
.background-primary     { background-color: var(--color-primary) !important; color: var(--color-white) !important; }
.background-success     { background-color: var(--color-success) !important; color: var(--color-white) !important; }
.background-warning     { background-color: var(--color-warning) !important; }
.background-danger      { background-color: var(--color-danger) !important; color: var(--color-white) !important; }

/* ==================================
   Text Color Utilities
================================== */
.text-black    { color: var(--color-black) !important; }
.text-white    { color: var(--color-white) !important; }
.text-gray     { color: var(--color-gray) !important; }
.text-primary  { color: var(--color-primary) !important; }
.text-success  { color: var(--color-success) !important; }
.text-warning  { color: var(--color-warning) !important; }
.text-danger   { color: var(--color-danger) !important; }

/* ==================================
   Flex Utilities
================================== */
.flex-column { flex-direction: column !important; }
.flex-row    { flex-direction: row !important; }
.flex-wrap   { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }
.justify-center { justify-content: center !important; }
.justify-between { justify-content: space-between !important; }
.align-center { align-items: center !important; }

/* 
   Gap utility (for flex and grid).
   Loops over $generic-gap-values to create .gap-0..gap-10
*/
@each $gap in $generic-gap-values {
  .gap-#{$gap} {
    gap: var(--spacing-#{$gap}) !important;
  }
}

/* ==================================
   Border Utilities
================================== */
.border {
  border: 1px solid var(--color-gray) !important;
}
.border-0,
.border-none {
  border: none !important;
}
.border-2 {
  border: 2px solid var(--color-gray) !important;
}
.border-radius-sm {
  border-radius: var(--border-radius-sm) !important;
}
.border-radius-md {
  border-radius: var(--border-radius-md) !important;
}
.border-radius-lg {
  border-radius: var(--border-radius-lg) !important;
}

/* ==================================
   Shadow Utilities
================================== */
.shadow-sm {
  box-shadow: var(--shadow-sm) !important;
}
.shadow-md {
  box-shadow: var(--shadow-md) !important;
}
.shadow-lg {
  box-shadow: var(--shadow-lg) !important;
}
.shadow-none {
  box-shadow: none !important;
}

/* ==================================
   Width/Height Utilities
================================== */
.w-25  { width: 25% !important; }
.w-50  { width: 50% !important; }
.w-75  { width: 75% !important; }
.w-100 { width: 100% !important; }
.w-auto { width: auto !important; }

.h-auto { height: auto !important; }
.h-100 { height: 100% !important; }
.min-h-100vh { min-height: 100vh !important; }

/* ==================================
   Positioning Utilities
================================== */
.position-static    { position: static !important; }
.position-relative  { position: relative !important; }
.position-absolute  { position: absolute !important; }
.position-fixed     { position: fixed !important; }
.top-0    { top: 0 !important; }
.right-0  { right: 0 !important; }
.bottom-0 { bottom: 0 !important; }
.left-0   { left: 0 !important; }

/* ==================================
   Z-Index Utilities
================================== */
.z-0   { z-index: var(--z-0) !important; }
.z-1   { z-index: var(--z-1) !important; }
.z-10  { z-index: var(--z-10) !important; }
.z-50  { z-index: var(--z-50) !important; }
.z-100 { z-index: var(--z-100) !important; }
.z-999 { z-index: var(--z-999) !important; }
